# ──────────────────────────────────────────────────────────────────────────────
# Zmienne Środowiskowe
# ──────────────────────────────────────────────────────────────────────────────
export HOMEBREW_CASK_OPTS="--no-quarantine"
export NULLCMD=bat
export N_PREFIX="$HOME/.n"
export PREFIX="$N_PREFIX"

# ──────────────────────────────────────────────────────────────────────────────
# Opcje Zsh
# ──────────────────────────────────────────────────────────────────────────────
setopt auto_cd

# ──────────────────────────────────────────────────────────────────────────────
# Aliasów
# ──────────────────────────────────────────────────────────────────────────────
alias l="lsd -lah"                          # List directory contents with lsd
alias nv="nvim"                             # Alias for nvim
alias rm="trash -rf"                        # Use trash instead of rm
alias bbd="brew bundle dump --force --describe"  # Dump Brewfile with descriptions
alias man="batman"                          # Use batman as man
alias grep="batgrep"                        # Use batgrep as grep
alias cat="bat"                             # Use bat as cat

# Definicja funkcji trail
function trail() {
  # Wypisuje zawartość zmiennej PATH w formie jednej ścieżki na linię
  print -l ${(s/:/)PATH}
}

# ──────────────────────────────────────────────────────────────────────────────
# Funkcje
# ──────────────────────────────────────────────────────────────────────────────

# Funkcja do tworzenia katalogu i przejścia do niego
mkcd() {
  mkdir -p "$@" && cd "$_"
}

# Funkcja do dodawania ścieżek do PATH, jeśli jeszcze nie istnieją
add_to_path() {
  if [[ ":$PATH:" != *":$1:"* ]]; then
    export PATH="$1:$PATH"
  fi
}


# Dodanie Homebrew i innych binarnych ścieżek do PATH
add_to_path "/opt/homebrew/bin"
add_to_path "/opt/homebrew/opt/trash/bin"
add_to_path "/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
add_to_path "$PATH:$N_PREFIX/bin"


# ──────────────────────────────────────────────────────────────────────────────
# Inicjalizacja Promptów
# ──────────────────────────────────────────────────────────────────────────────
# Inicjalizacja Starship Prompt
eval "$(starship init zsh)"

# ──────────────────────────────────────────────────────────────────────────────
# Inne Ustawienia
# ──────────────────────────────────────────────────────────────────────────────
# Wyłączenie komunikatów "last login"
if [[ -n "$SSH_CONNECTION" ]]; then
  touch ~/.hushlogin
fi

# ──────────────────────────────────────────────────────────────────────────────
# Inicjalizacja Zinit
# ──────────────────────────────────────────────────────────────────────────────
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

# Sprawdź, czy Zinit został zainstalowany, i wczytaj go
if [ -f "${ZINIT_HOME}/zinit.zsh" ]; then
  source "${ZINIT_HOME}/zinit.zsh"
else
  echo "[WARNING] Zinit nie został zainstalowany. Uruchom 'scripts/setup_repos.zsh'."
fi


# ──────────────────────────────────────────────────────────────────────────────
# Zinit plugins 
# ──────────────────────────────────────────────────────────────────────────────

zinit light zsh-users/zsh-syntax-highlightg
zinit light zsh-users/zsh-completions

# ──────────────────────────────────────────────────────────────────────────────
# Uzupełnienia i Dodatki
# ──────────────────────────────────────────────────────────────────────────────

# Load complitions
autoload -U compinit && compinit
